apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
  labels:
    app: {{ .Values.backend.name }}
    chart: {{ template "workshop-app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
        release: {{ .Release.Name }}
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              port: 8080
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthy
              port: http
          readinessProbe:
            httpGet:
              path: /healthy
              port: http
          volumeMounts:
            - name: {{ .Values.backend.name }}-volume
              mountPath: /mydata
      volumes:
      - name: {{ .Values.backend.name }}-volume
        persistentVolumeClaim:
          claimName: {{ .Values.backend.name }}-pvc
